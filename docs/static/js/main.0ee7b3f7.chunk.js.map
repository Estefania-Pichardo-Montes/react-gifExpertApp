{"version":3,"sources":["Components/AddCategory.js","helpers/getGifts.js","Components/GifGridItem.js","Components/GifGrid.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","Category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGift","key","GifExpertApp","categorias","category","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGVC,mBAAS,IAHC,mBAGrCC,EAHqC,KAGzBC,EAHyB,KAqB5C,OAEI,0BAAMC,SAbS,SAACC,GAChBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IAExBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,OASd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAtBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,Y,uBCTfG,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DACXC,EADW,iDACoCC,UAAUH,GAD9C,+DAECI,MAAMF,GAFP,cAEXG,EAFW,gBAGGA,EAAKC,OAHR,uBAGVC,EAHU,EAGVA,KAEDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACrB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QATxB,kBAaZM,GAbY,4CAAF,sDCCVO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGjC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCJHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECEb,SAACA,GAAY,IAAD,EACRd,mBAAS,CAC3BqB,KAAK,GACLa,SAAQ,IAHkB,mBAC3BC,EAD2B,KACpBC,EADoB,KAgBlC,OAVAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GAEnBH,EAAS,CACPf,KAAKkB,EACLL,SAAQ,SAGhB,CAACpB,IAEIqB,EDhB0BK,CAAa1B,GAAjCa,EAFsB,EAE3BN,KAAaa,EAFc,EAEdA,QAErB,OACI,oCACI,wBAAIJ,UAAU,4BAA4BhB,GACzCoB,GAAW,uBAAGJ,UAAU,oCAAb,WACX,yBAAKA,UAAU,YAGRH,EAAOJ,KAAI,SAACC,GAAD,OACP,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEdnBkB,EAAe,WAAO,IAAD,EAGM1C,mBAAS,CAAC,YAHhB,mBAGvB2C,EAHuB,KAGX5C,EAHW,KAK9B,OACI,6BACO,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEO4C,EAAWpB,KAAI,SAACqB,GAAD,OAEb,kBAAC,EAAD,CACIH,IAAKG,EACL9B,SAAU8B,U,MChBtCC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.0ee7b3f7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n\r\n    \r\n    const [inputValue, setInputValue]=useState('');\r\n\r\n    \r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2)\r\n        {\r\n            setCategorias(cats=>[inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n        \r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>        \r\n    )\r\n}\r\nAddCategory.propTypes={\r\n    setCategorias:PropTypes.func.isRequired\r\n}\r\n","\r\n   export const getGifs= async(Category)=>{\r\n        const url= `https://api.giphy.com/v1/gifs/search?q=${encodeURI(Category)}&limit=10&api_key=HhnOGAilbvQmrSBPErfFwnXoiZivjE6s`;\r\n        const resp= await fetch(url);\r\n        const {data}= await resp.json();\r\n\r\n        const gifs=data.map(img=>{\r\n            return {\r\n                id:img.id,\r\n                title:img.title,\r\n                url:img.images?.downsized_medium.url\r\n            }\r\n        })\r\n\r\n      return gifs;\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n\r\n    // console.log(id,title,url);\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGift } from '../Hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({Category}) => {\r\n\r\n    const { data:images, loading } = useFetchGift(Category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated fadeIn\">{Category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n             <div className=\"cardGrid\">\r\n           \r\n                {\r\n                    images.map((img)=>\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    )\r\n                }\r\n             </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifts\";\r\n\r\n//Este es un custom hook\r\n//Funcionan como si fueran functional components\r\n\r\nexport const useFetchGift=(Category)=>{\r\n    const [state, setstate] = useState({\r\n            data:[],\r\n            loading:true\r\n     });\r\n\r\n    useEffect(()=>{\r\n        getGifs(Category).then(imgs=>{\r\n\r\n            setstate({\r\n              data:imgs,\r\n              loading:false\r\n          })       \r\n        });\r\n    },[Category])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categorias, setCategorias] = useState(['The 100']);\r\n\r\n    return (\r\n        <div>\r\n               <h2>GifExpertApp</h2>         \r\n               <AddCategory setCategorias={setCategorias}></AddCategory>\r\n               <hr/>\r\n\r\n               <ol>\r\n                  {\r\n                      categorias.map((category)=>\r\n\r\n                        <GifGrid \r\n                            key={category}\r\n                            Category={category}>\r\n\r\n                        </GifGrid>\r\n                      )\r\n                  }\r\n               </ol>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n//Crear un componente  que se llame GifExpertApp\n\n\n"],"sourceRoot":""}